<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xdmd.IntranetEnvironment.subjectAcceptance.mapper.SubjectAcceptMapper">

    <select id="queryAllSubjectAccept" resultType="Integer">
        select count(*) from check_apply
        <where>
            <if test="topicName != null">
                topic_name like CONCAT('%',#{topicName},'%')
            </if>
            <if test="subjectUndertakingUnit != null">
                and subject_undertaking_unit like CONCAT('%',#{subjectUndertakingUnit},'%')
            </if>
            <if test="unitNature != null">
                and unit_nature like CONCAT('%',#{unitNature},'%')
            </if>
            <if test="projectLeader != null">
                and project_leader like CONCAT('%',#{projectLeader},'%')
            </if>
            <if test="0 == 0">
                and acceptance_phase_id  in(4,5)
            </if>
        </where>
    </select>

    <select id="subjectAcceptQuery" resultType="com.xdmd.IntranetEnvironment.subjectAcceptance.pojo.CheckApply">
        select
            *
--         id,
--         topic_name,
--         topic_number ,
--         subject_undertaking_unit_id,
--         unit_nature ,
--         project_leader ,
--         project_leader_phone ,
--         project_leader_mail ,
--         postal_address ,
--         agreement_start_time,
--         agreement_end_time,
--         application_acceptance_time ,
--         application_acceptance_mode,
--         application_acceptance_place,
--         acceptance_contact ,
--         acceptance_contact_phone ,
--         main_content_situation,
--         submission_achievements_situation ,
--         subject_undertaking_unit_opinion,
--         environmental_departments_opinion ,
--         province_assessment_center_opinion,
--         competent_department_oinion,
--         submit_inventory ,
--         acceptance_phase_id ,
--         create_time ,
--         create_author,
--         achievement_url_id ,
--         submit_url_id ,
--         audit_report_url_id ,
--         first_inspection_report_url_id,
--         expert_group_comments_url_id ,
--         expert_acceptance_form_id,
--         application_url_id
        from
        check_apply
        <where>
            <if test="topicName != null">
                topic_name like CONCAT('%',#{topicName},'%')
            </if>
            <if test="subjectUndertakingUnit != null">
                and subject_undertaking_unit like CONCAT('%',#{subjectUndertakingUnit},'%')
            </if>
            <if test="unitNature != null">
                and unit_nature like CONCAT('%',#{unitNature},'%')
            </if>
            <if test="projectLeader != null">
                and project_leader like CONCAT('%',#{projectLeader},'%')
            </if>
            <if test="0 == 0">
                and acceptance_phase_id in (4,5)
            </if>
        </where>
        order by create_time desc
        limit #{newpage},#{total}
    </select>

    <insert id="insertFile"  useGeneratedKeys="true" keyProperty="id">
        INSERT INTO upload_file(
        id,
        upload_file_address,
        upload_file_name,
        upload_file_type,
        upload_suffix_name,
        file_size,
        create_time,
        create_author)
        VALUES(
        #{uploadExpertGroupComments.id},
        #{uploadExpertGroupComments.uploadFileAddress},
        #{uploadExpertGroupComments.uploadFileName},
        #{uploadExpertGroupComments.uploadFileType},
        #{uploadExpertGroupComments.uploadSuffixName},
        #{uploadExpertGroupComments.fileSize},
        #{uploadExpertGroupComments.createTime},
        #{uploadExpertGroupComments.createAuthor});
    </insert>

    <insert id="addExpertGroupComment" useGeneratedKeys="true" keyProperty="egcId">
        insert into expert_group_comments(
        egc_id,
        ca_id,
        topic_name,
        topic_number,
        project_leader,
        subject_undertaking_unit,
        acceptance_expert_number,
        expert_one_grade,
        expert_two_grade,
        expert_three_grade,
        expert_four_grade,
        expert_five_grade,
        expert_six_grade,
        expert_seven_grade,
        synthesize_grade,
        topic_overall_evaluation,
        suggest,
        acceptance_conclusion_id,
        expert_leader,
        write_date,
        create_time,
        create_author)
        VALUES(
        #{expertGroupComment.egcId},
        #{expertGroupComment.caId},
        #{expertGroupComment.topicName},
        #{expertGroupComment.topicNumber},
        #{expertGroupComment.projectLeader},
        #{expertGroupComment.subjectUndertakingUnit},
        #{expertGroupComment.acceptanceExpertNumber},
        #{expertGroupComment.expertOneGrade},
        #{expertGroupComment.expertTwoGrade},
        #{expertGroupComment.expertThreeGrade},
        #{expertGroupComment.expertFourGrade},
        #{expertGroupComment.expertFiveGrade},
        #{expertGroupComment.expertSixGrade},
        #{expertGroupComment.expertSevenGrade},
        #{expertGroupComment.synthesizeGrade},
        #{expertGroupComment.topicOverallEvaluation},
        #{expertGroupComment.suggest},
        #{expertGroupComment.acceptanceConclusionId},
        #{expertGroupComment.expertLeader},
        #{expertGroupComment.writeDate},
        #{expertGroupComment.createTime},
        #{expertGroupComment.createAuthor}
        )
    </insert>

    <insert id="addExpertGroupCommentName" useGeneratedKeys="true" keyProperty="egcNid">
        insert into expert_group_comments_name(
        egc_nid,
        egc_id,
        expert_name,
        company_name,
        major,
        job)
        values(
        #{egcn.egcNid},
        #{egcn.egcId},
        #{egcn.expertName},
        #{egcn.companyName},
        #{egcn.major},
        #{egcn.job}
        )
    </insert>

</mapper>