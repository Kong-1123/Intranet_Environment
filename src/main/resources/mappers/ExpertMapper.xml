<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xdmd.IntranetEnvironment.expert.mapper.ExpertMapper">
    <insert id="addExpertInformation" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO expert_information(
            id,
            aid,
            name,
            username,
            password,
            sex,
            birth_date,
            education,
            present_post,
            technical_title,
            study_major,
            professionalism,
            work_unit,
            postal_address,
            postal_code,
            work_telephone,
            phone,
            mail,
            nature_work,
            professional_field,
            curriculum_vitae,
            recommendation_unit_opinion,
            create_author,
            create_time,
            is_province,
            expert_information_url_id)
        VALUES(
          #{expertInformation.id},
          #{expertInformation.aid,},
          #{expertInformation.name},
          #{expertInformation.username},
          #{expertInformation.password},
          #{expertInformation.sex},
          #{expertInformation.birthDate},
          #{expertInformation.education},
          #{expertInformation.presentPost},
          #{expertInformation.technicalTitle},
          #{expertInformation.studyMajor},
          #{expertInformation.professionalism},
          #{expertInformation.workUnit},
          #{expertInformation.postalAddress},
          #{expertInformation.postalCode},
          #{expertInformation.workTelephone},
          #{expertInformation.phone},
          #{expertInformation.mail},
          #{expertInformation.natureWork},
          #{expertInformation.professionalField},
          #{expertInformation.curriculumVitae},
          #{expertInformation.recommendationUnitOpinion},
          #{expertInformation.createAuthor},
          #{expertInformation.createTime},
          #{expertInformation.isProvince},
          #{expertInformation.expertInformationUrlId}
      )
    </insert>

    <insert id="addExpertInformationArticle" useGeneratedKeys="true" keyProperty="id">
        insert into expert_information_article(
          id,
          expert_id,
          article_title,
          authorr_ranking,
          title_articles_periodicals,
          articles_publication_time)
          values (
          #{expertInformationArticle.id},
          #{expertInformationArticle.expertId},
          #{expertInformationArticle.articleTitle},
          #{expertInformationArticle.authorrRanking},
          #{expertInformationArticle.titleArticlesPeriodicals},
          #{expertInformationArticle.articlesPublicationTime})
    </insert>

    <insert id="addExpertInformationBook" useGeneratedKeys="true" keyProperty="id">
        insert into expert_information_book(
        id,
        expert_id,
        work_name,
        sort,
        book_publishing_house,
        writing_time)
        values (
        #{expertInformationBook.id},
        #{expertInformationBook.expertId},
        #{expertInformationBook.workName},
        #{expertInformationBook.sort},
        #{expertInformationBook.bookPublishingHouse},
        #{expertInformationBook.writingTime})
    </insert>

    <insert id="addExpertInformationPatent" useGeneratedKeys="true" keyProperty="id">
        insert into expert_information_patent(
        id,
        expert_id,
        patent_name,
        patent_types,
        patent_no,
        patent_time)
        values(
        #{expertInformationPatent.id},
        #{expertInformationPatent.expertId},
        #{expertInformationPatent.patentName},
        #{expertInformationPatent.patentTypes},
        #{expertInformationPatent.patentNo},
        #{expertInformationPatent.patentTime})
    </insert>
    
    <insert id="addExpertInformationPrizeWinning" useGeneratedKeys="true" keyProperty="id">
        insert into expert_information_prize_winning(
        id,
        expert_id,
        prize_winning_name,
        prize_winning_order,
        prize_winning_department,
        prize_winning_time)
        values (
        #{expertInformationPrizeWinning.id},
        #{expertInformationPrizeWinning.expertId},
        #{expertInformationPrizeWinning.prizeWinningName},
        #{expertInformationPrizeWinning.prizeWinningOrder},
        #{expertInformationPrizeWinning.prizeWinningDepartment},
        #{expertInformationPrizeWinning.prizeWinningTime})
    </insert>

    <insert id="addExpertInformationResearchDirection" useGeneratedKeys="true" keyProperty="id">
        insert into expert_information_research_direction(
          id,
          expert_id,
          main_research_directions)
          values (
          #{expertInformationResearchDirection.id},
          #{expertInformationResearchDirection.expertId},
          #{expertInformationResearchDirection.mainResearchDirections}
          )
    </insert>

    <select id="queryAllExpert" resultType="Integer">
        SELECT DISTINCT
        count(s.uid)
        FROM
        expert_information e,
        shiro_user_information s
        <where>
            <if test="name!=null">
                s.real_name like CONCAT('%',#{name},'%')
            </if>
            <if test="natureWork != null">
                and e.nature_work like CONCAT('%',#{natureWork},'%')
            </if>
            <if test="professionalField != null">
                and e.professional_field like CONCAT('%',#{professionalField},'%')
            </if>
            <if test="isProvince != null">
                and e.is_province like CONCAT('%',#{isProvince},'%')
            </if>
            <if test="0 == 0">
                AND e.aid = s.uid and is_state in(1,2) and identity = 2
            </if>
        </where>
    </select>

    <select id="queryExpertInformation" resultType="com.xdmd.IntranetEnvironment.expert.pojo.ExpertInformation">
      SELECT
          id,
          name,
          sex,
          birth_date,
          education,
          present_post,
          technical_title,
          study_major,
          professionalism,
          work_unit,
          postal_address,
          postal_code,
          work_telephone,
          phone,
          mail,
          nature_work,
          professional_field,
          curriculum_vitae,
          recommendation_unit_opinion,
          is_state,
          is_province,
          expert_information_url_id
      from
          expert_information
        <where>
            <if test="name != null and name!='' ">
                name like CONCAT('%',#{name},'%')
            </if>
            <if test="natureWork != null and natureWork!='' ">
                and nature_work = #{natureWork}
            </if>
            <if test="professionalField != null and professionalField!='' ">
                and professional_field = #{professionalField}
            </if>
            <if test="isProvince != null and isProvince!='' ">
                and is_province = #{isProvince}
            </if>
            <if test="0 == 0">
                and is_state in(1,2) and is_delete = 1
            </if>
        </where>
    </select>
    <insert id="uploadExpertFile" useGeneratedKeys="true" keyProperty="id">
        insert into upload_file(
        id,
        upload_file_address,
        upload_file_name,
        upload_file_type,
        upload_suffix_name,
        file_size,
        create_time,
        create_author)
        values(
        #{uploadFileExpert.id},
        #{uploadFileExpert.uploadFileAddress},
        #{uploadFileExpert.uploadFileName},
        #{uploadFileExpert.uploadFileType},
        #{uploadFileExpert.uploadSuffixName},
        #{uploadFileExpert.fileSize},
        #{uploadFileExpert.createTime},
        #{uploadFileExpert.createAuthor},
        )
    </insert>

    <insert id="uploadFile" useGeneratedKeys="true" keyProperty="id">
        insert into upload_file(
            id,
            upload_file_address,
            upload_file_name,
            upload_file_type,
            upload_suffix_name,
            file_size,
            create_time,
            create_author)
        values(
              #{uploadFile.id},
              #{uploadFile.uploadFileAddress},
              #{uploadFile.uploadFileName},
              #{uploadFile.uploadFileType},
              #{uploadFile.uploadSuffixName},
              #{uploadFile.fileSize},
              #{uploadFile.createTime},
              #{uploadFile.createAuthor}
        )
    </insert>

    <insert id="addUserInformation" useGeneratedKeys="true" keyProperty="uid">
        insert into shiro_user_information(
            uid,
            real_name,
            login_name,
            password,
            identity,
            is_delete,
            is_first,
            is_state
        )values (
            #{userInformation.uid},
            #{userInformation.realName},
            #{userInformation.loginName},
            #{userInformation.password},
            #{userInformation.identity},
            #{userInformation.isDelete},
            #{userInformation.isFirst},
            #{userInformation.isState}
        )
    </insert>

    <select id="queryAllExpertIdList" resultType="Integer">
        SELECT DISTINCT
        s.uid
        FROM
        expert_information e,
        shiro_user_information s
        <where>
            <if test="name!=null">
                s.real_name like CONCAT('%',#{name},'%')
            </if>
            <if test="natureWork != null">
                and e.nature_work like CONCAT('%',#{natureWork},'%')
            </if>
            <if test="professionalField != null">
                and e.professional_field like CONCAT('%',#{professionalField},'%')
            </if>
            <if test="isProvince != null">
                and e.is_province like CONCAT('%',#{isProvince},'%')
            </if>
            <if test="0 == 0">
                AND e.aid = s.uid and is_state in(1,2) and identity = 2
            </if>
        </where>
        limit #{newpage},#{total}
    </select>

    <select id="queryExpertUserInformation" resultType="com.xdmd.IntranetEnvironment.company.Pojo.UserInformation">
        select
             uid,
             real_name,
             login_name,
             identity,
             is_delete,
             is_first,
             is_state
        from
             shiro_user_information
        where uid = #{expertId}
    </select>

    <select id="queryExpertInformationByExpertId" resultType="com.xdmd.IntranetEnvironment.expert.pojo.ExpertInformation">
        SELECT
            id,
            aid,
            sex,
            birth_date,
            education,
            present_post,
            technical_title,
            study_major,
            professionalism,
            work_unit,
            postal_address,
            postal_code,
            work_telephone,
            phone,
            mail,
            nature_work,
            professional_field,
            curriculum_vitae,
            recommendation_unit_opinion,
            create_author,
            create_time,
            is_province,
            reason,
            expert_information_url_id
        FROM
            expert_information
        WHERE
            aid = #{expertId}
    </select>

    <update id="updateExpertInformation">
        update expert_information set
        sex = #{expertInformation.sex},
        birth_date = #{expertInformation.birthDate},
        education = #{expertInformation.education},
        present_post = #{expertInformation.presentPost},
        technical_title = #{expertInformation.technicalTitle},
        study_major = #{expertInformation.studyMajor},
        professionalism = #{expertInformation.professionalism},
        work_unit = #{expertInformation.workUnit},
        postal_address = #{expertInformation.postalAddress},
        postal_code = #{expertInformation.postalCode},
        work_telephone = #{expertInformation.workTelephone},
        phone = #{expertInformation.phone},
        mail = #{expertInformation.mail},
        nature_work = #{expertInformation.natureWork},
        professional_field = #{expertInformation.professionalField},
        curriculum_vitae = #{expertInformation.curriculumVitae},
        recommendation_unit_opinion = #{expertInformation.recommendationUnitOpinion},
        is_province = #{expertInformation.isProvince}
        <if test="expertInformation.expertInformationUrlId != null">
            , expert_information_url_id = #{expertInformation.expertInformationUrlId}
        </if>
        where aid = #{expertInformation.aid}
    </update>

    <!--<update id="updateExpertInformationArticle">-->
        <!--update -->
    <!--</update>-->
</mapper>